//------------------------------------------------
//--- 010 Editor v13.0.1 Binary Template
//
//      File: skill_tree_0.13.27.cfg.bin
//   Authors: Light8227
//   Version: 1.0
//------------------------------------------------
#include "ykw4_enums.bt"

LittleEndian();

typedef struct
{
    uint unk;
    uint entryBlockSize <name="EntryBlockSize">;
    uint unk2;
    uint catCount <name="CategoryCount">;
    uint unk3[2];
    uint entryCount <name="EntryCount">;
}header;

typedef struct
{
    uint unk4[4];
}tableInfo;

typedef struct
{
    uint unk5[4];
    uint entryCount <name="EntryCount">;
}header2;

typedef struct
{
    uint unk6[3] <name="SKILL_TREE_TABLE">;
    uint unk7[4] <name="SKILL_TREE_TABLE_REF_TABLE_INFO">;
}tableList;

typedef struct
{
    uint unk8[4];
    uint entryCount <name="EntryCount">;
}header3;

typedef struct
{
    uint unk9[3];
    uint reqpoints <name="Required Points", comment="Number of Watch Points needed to acquire.">;
    uint unk10;
    moveID paramid <name="MoveID">;
    uint unk11[4];
}lvInfo;

typedef struct
{
    uint unk12[4];
    uint entryCount <name="EntryCount">;
}header4;

typedef struct
{
    uint unk13[9] <name="SKILL_TREE_INFO">;
    uint unk14[4] <name="SKILL_TREE_INFO_REF_LV_INFO">;
}infoList;

typedef struct
{
    uint unk15[4];
    uint entryCount <name="EntryCount">;
}header5;

typedef struct
{
    uint unk16[3];
}connectList;

typedef struct
{
    uint unk17[4];
    uint entryCount <name="EntryCount">;
}header6;

typedef struct
{
    uint unk18[4] <name="SKILL_TREE_CONNECT_SKILL">;
    uint unk19[4] <name="SKILL_TREE_CONNECT_SKILL_REF_CONNECT">;
}connectSkill;

typedef struct
{
    uint unk20[4];
    uint entryCount <name="EntryCount">;
}header7;

typedef struct
{
    uint unk21[4] <name="SKILL_TREE_CONNECT_TYPE">;
    uint unk22[4] <name="SKILL_TREE_CONNECT_TYPE_REF_SKILL">;
}connectType;

typedef struct
{
    uint unk23[4];
    uint entryCount <name="EntryCount">;
}header8;

typedef struct
{
    uint unk24[3] <name="SKILL_TREE_CONNECT_INFO">;
    uint unk25[4] <name="SKILL_TREE_CONNECT_INFO_REF_TYPE">;
}connectInfo;

typedef struct
{
    uint unk26[133];
}unk;

typedef struct
{
    uint strings[207] <name="Strings">;
    short strings2 <name="Strings">;
}Strings;

typedef struct
{
    short unk27;
    uint unk28[4];
}unk2;

struct
{
    header secheader <name="Header">;
    tableInfo tableinfo[236] <name="SKILL_TREE_TABLE_INFO_LIST_BEG">;
    header2 secheader2 <name="Header2">;
    tableList tablelist[6] <name="SKILL_TREE_TABLE_LIST_BEG">;
    header3 secheader3 <name="Header3">;
    lvInfo lvinfo[480] <name="SKILL_TREE_LV_INFO_LIST_BEG">;
    header4 secheader4 <name="Header4">;
    infoList infolist[236] <name="SKILL_TREE_INFO_LIST_BEG">;
    header5 secheader5 <name="Header5">;
    connectList connectlist[191] <name="SKILL_TREE_CONNECT_CONNECT_LIST_BEG">;
    header6 secheader6 <name="Header6">;
    connectSkill connectskill[147] <name="SKILL_TREE_CONNECT_SKILL_LIST_BEG">;
    header7 secheader7 <name="Header7">;
    connectType connecttype[36] <name="SKILL_TREE_CONNECT_TYPE_LIST_BEG">;
    header8 secheader8 <name="Header8">;
    connectInfo connectinfo[6] <name="SKILL_TREE_CONNECT_INFO_LIST_BEG">;
    unk unknown;
    Strings catNames <name="Category Name Strings">;
    unk2 unknown2;
}fileData;