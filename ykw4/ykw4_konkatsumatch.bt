//------------------------------------------------
//--- 010 Editor v13.0.1 Binary Template
//
//      File: konkatsu_match_config_0.16.04.cfg.bin
//   Authors: Century_, Light8227
//   Version: 1.2
//------------------------------------------------
#include "ykw4_enums.bt"

LittleEndian();

typedef struct
{
    char Magic[6] <name="Magic">;
    byte unk[6];
    uint EntryBlockOffset <name="EntryBlockOffset">;
    byte unk2[36];
    ushort stringCount <name="StringCount">;
    byte unk3[2];
    uint EntryBlockSize <name="EntryBlockSize">;
    byte unk4[20];
}Header;

typedef struct
{
    byte unk5[352];
}entry;

typedef struct
{
    byte unk6[8];
    uint entrySize <name="EntrySize">;
    uint entryCount <name="EntryCount">;
    byte unk7[20];
    uint sectionSize <name="SectionSize">;
    byte unk8[128];
}Header2;

typedef struct
{
    paramID charaParamID <name="ParamID">;
    uint charaID <name="CharaID">;
    uint money <name="Money",comment="Base price to summon Yo-kai.">;
    uint moneyAdd <name="MoneyAdd",comment="Multiplier to add or subtract money depending on level? Don't know exact formula.">;
    uint itemIDArray[3] <name="ItemIDArray">;
    uint itemNumArray[3] <name="ItemNumArray",comment="The number of required items.">;
    itemType itemTypeArray[4] <name="ItemTypeArray",comment="Entries with Material either means a Material is set there or nothing is. They both use 0.">;
}MatchInfo;

typedef struct
{
    Rank watchRank <name="WatchRank">;
    ushort level <name="Level",comment="Normal summon level limit. Not applicable to gold aura Yo-kai.">;
}MatchLevel[6];

typedef struct
{
    int KonkatsuMatchInfo[5];
    int charaParamID[3];
    byte charaParamID2;
    byte charaID[3];
    int charaID2;
    byte charaID3;
    short money[3];
    int moneyAdd[2];
    byte moneyAdd;
    int itemIDArray[3];
    int itemNumArray[3];
    byte itemNumArray2;
    short itemTypeArray[7];
    int KonkatsuMatchLevel[5];
    byte KonkatsuMatchLevel;
    short watchRank[5];
    short level[3];
    int mKonkatsuMatchInfoList[6];
    int mKonkatsuMatchLevelList[6];
    byte mKonkatsuMatchLevelList2;
}Strings;


struct
{
    Header secHeader <name="Header">;
    entry data;
    Header2 secHeader2 <name="Header2">;
    MatchInfo data2[132] <name="KONKATSU_MATCH_INFO">;
    MatchLevel watchlevel <name="KONKATSU_MATCH_LEVEL">;
    Strings catNames <name="Category Name Strings">;
}fileData;